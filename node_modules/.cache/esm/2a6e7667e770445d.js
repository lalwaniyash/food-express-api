let express,userController,loginController,registerController,refreshController,productController,admin,auth;_e77‍.x([["default",()=>_e77‍.o]]);_e77‍.w("express",[["default",["express"],function(v){express=v}]]);_e77‍.w("../controllers",[["userController",["userController"],function(v){userController=v}],["loginController",["loginController"],function(v){loginController=v}],["registerController",["registerController"],function(v){registerController=v}],["refreshController",["refreshController"],function(v){refreshController=v}]]);_e77‍.w("../controllers/productController",[["default",["productController"],function(v){productController=v}]]);_e77‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);_e77‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);





const router = express.Router();

router.post('/register', registerController.register);
router.post('/login', loginController.login);
router.get('/me', auth, userController.me);
router.post('/refresh', refreshController.refresh);
router.post('/logout', auth, loginController.logout);

router.post('/products/cart-items', productController.getProducts);
router.post('/products', [auth, admin], productController.store);
router.put('/products/:id', [auth, admin], productController.update);
router.delete('/products/:id', [auth, admin], productController.destroy);
router.get('/products', productController.index);
router.get('/products/:id', productController.show);

_e77‍.d(router);
